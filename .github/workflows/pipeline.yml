name: CI/CD

on:
  push:
    branches: 
    - dev
    - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check in to branch
      uses: actions/checkout@v2
      
    - name: Setup Dotnet Environment
      uses: actions/setup-dotnet@v1
      with:
            dotnet-version: 5.0.x
    - name: Run restore
      run: dotnet restore
        
    - name: Build dotnet
      run: dotnet build --no-restore
    - name: Run test
      run: dotnet test --no-build
        
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building the Docker Image with dev-tag
      if: github.ref == 'refs/heads/dev'
      uses: docker/build-push-action@v2.9.0
      with:
          push: true
          tags: mikaelaolsson/cloudapp:dev
          file: ./CloudApp/Dockerfile

    - name: Building the Docker Image with latest-tag
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v2.9.0
      with:
          push: true
          tags: mikaelaolsson/cloudapp:latest
          file: ./CloudApp/Dockerfile
  
  pull-request:
    if: github.ref == 'refs/heads/dev'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout        
        uses: actions/checkout@v2

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "main"
          github_token: ${{ secrets.PAT }}

  connect-open-vpn:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Open VPN
        run: sudo apt-get install openvpn
      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: ${{ secrets.SERVER_HOST }}
          FILE_OVPN: './.github/vpn/config.ovpn'
          SECRET: ${{ secrets.SECRET_USERNAME_PASSWORD }}
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}

      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}
      - name: ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: kubectl rollout restart deployment cloudapp

      - name: kill vpn
        if: always()
        run: sudo killall openvpn



    # steps:
    # - name: ssh
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.VPN_HOST }}
    #     username: ${{ secrets.SERVER_USERNAME }}
    #     key: ${{ secrets.VPN_KEY }}
    #     port: ${{ secrets.SERVER_PORT }}
    #     echo: "Victory is mine...maybe?"


    # - name: ssh
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.SERVER_HOST }}
    #     username: ${{ secrets.SERVER_USERNAME }}
    #     key: ${{ secrets.SERVER_KEY }}
    #     port: ${{ secrets.SERVER_PORT }}
    #     script: kubectl rollout restart deployment cloudapp
